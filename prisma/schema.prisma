// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
}

model User {
  id String @unique @default(uuid())
  email String @unique
  name String @db.VarChar(90)
  password String 
  gender Gender @default(Male)
  image String?
  isSuperuser Boolean @default(false)
  isActive Boolean @default(false)
  createdAt DateTime
  codeEmail CodeEmail?
  events Event[]
  calls Call[]
  news News[]
}

model CodeEmail {
  id String @unique @default(uuid())
  code String 
  userId String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiredAt DateTime
}

model Event {
  id String @unique @default(uuid())
  name String 
  date DateTime @db.Date
  userId String?
  createdBy User? @relation(fields: [userId], references: [id], onDelete: SetNull)
  createdAt DateTime
}

model Call {
  id String @unique @default(uuid())
  name String
  url String?
  userId String?
  createdBy User? @relation(fields: [userId], references: [id], onDelete: SetNull)
  createdAt DateTime @db.Timestamp()
}

model News {
  id String @unique @default(uuid())
  name String
  description String
  image String
  userId String?
  createdBy User? @relation(fields: [userId], references: [id], onDelete: SetNull)
  createdAt DateTime
}

